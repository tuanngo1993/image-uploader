{"version":3,"sources":["images/image.png","images/preview-image.svg","components/image-uploader/image-uploader.js","App.js","reportWebVitals.js","index.js"],"names":["ImageUploader","props","uploadInput","React","createRef","focusUploadInputHandler","bind","fileUploadHanlder","onChangeFileHandler","onDropHandler","onDragOverHandler","copyLinkHandler","file","status","this","onChangeHandler","e","target","files","length","current","click","preventDefault","dataTransfer","navigator","clipboard","writeText","link","then","alert","catch","err","console","log","className","Icon","color","name","Segment","Loader","active","onDrop","onDragOver","src","previewImage","alt","type","onChange","ref","image","Button","primary","onClick","size","Component","App","state","uploadFileHandler","item","setTimeout","setState","split","join","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee9ed0c4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image.e1009999.png\";","export default __webpack_public_path__ + \"static/media/preview-image.3710b8a3.svg\";","import React from \"react\";\nimport { Button, Loader, Segment, Icon } from \"semantic-ui-react\";\n\nimport \"./image-uploader.css\";\nimport previewImage from \"../../images/preview-image.svg\";\n\nexport class ImageUploader extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.uploadInput = React.createRef();\n\t\tthis.focusUploadInputHandler = this.focusUploadInputHandler.bind(this);\n\t\tthis.fileUploadHanlder = this.fileUploadHanlder.bind(this);\n\t\tthis.onChangeFileHandler = this.onChangeFileHandler.bind(this);\n\t\tthis.onDropHandler = this.onDropHandler.bind(this);\n\t\tthis.onDragOverHandler = this.onDragOverHandler.bind(this);\n\t\tthis.copyLinkHandler = this.copyLinkHandler.bind(this);\n\t}\n\n\tfileUploadHanlder(file, status) {\n\t\tif (this.props.onChangeHandler) {\n\t\t\tthis.props.onChangeHandler(file, status);\n\t\t}\n\t}\n\n\tonChangeFileHandler(e) {\n\t\tif (e.target.files && e.target.files.length > 0) {\n\t\t\tthis.fileUploadHanlder(e.target.files, \"success\");\n\t\t}\n\t}\n\n\tfocusUploadInputHandler() {\n\t\tthis.uploadInput.current.click();\n\t}\n\n\tonDragOverHandler(e) {\n\t\te.preventDefault();\n\t}\n\n\tonDropHandler(e) {\n\t\te.preventDefault();\n\t\tthis.fileUploadHanlder(e.dataTransfer.files, \"success\");\n\t}\n\n\tcopyLinkHandler() {\n\t\tnavigator.clipboard\n\t\t\t.writeText(this.props.link)\n\t\t\t.then(() => {\n\t\t\t\talert(\"Copied link!!!\");\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"image-uploader\">\n\t\t\t\t<div className=\"image-uploader__container\">\n\t\t\t\t\t<div className=\"image-uploader__header\">\n\t\t\t\t\t\t{this.props.status === \"upload\" && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className=\"image-uploader__title\">\n\t\t\t\t\t\t\t\t\tUpload Your Image\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"image-uploader__description\">\n\t\t\t\t\t\t\t\t\tFile should be jpeg, png,...\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{this.props.status === \"success\" && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Icon color=\"green\" name=\"check circle\" />\n\t\t\t\t\t\t\t\t<div className=\"image-uploader__description\">\n\t\t\t\t\t\t\t\t\tUploaded Successfully!\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"image-uploader__body\">\n\t\t\t\t\t\t{this.props.status === \"loading\" && (\n\t\t\t\t\t\t\t<div className=\"image-uploader__loading\">\n\t\t\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t\t\t<Loader active>Uploading...</Loader>\n\t\t\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{this.props.status === \"upload\" && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"image-uploader__dnd-area\"\n\t\t\t\t\t\t\t\tonDrop={this.onDropHandler}\n\t\t\t\t\t\t\t\tonDragOver={this.onDragOverHandler}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={previewImage}\n\t\t\t\t\t\t\t\t\tclassName=\"image-uploader__dnd-preview-image\"\n\t\t\t\t\t\t\t\t\talt=\"preview\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className=\"image-uploader__dnd-label\">\n\t\t\t\t\t\t\t\t\tDrag and Drop Your Image Here\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\tclassName=\"image-uploader__input\"\n\t\t\t\t\t\t\t\t\tonChange={this.onChangeFileHandler}\n\t\t\t\t\t\t\t\t\tref={this.uploadInput}\n\t\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{this.props.status === \"success\" && (\n\t\t\t\t\t\t\t<div className=\"image-uploader__uploaded-area\">\n\t\t\t\t\t\t\t\t<div className=\"image-uploader__uploaded-image\">\n\t\t\t\t\t\t\t\t\t{this.props.image}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"image-uploader__footer\">\n\t\t\t\t\t\t{this.props.status === \"upload\" && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<p>OR</p>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\t\t\tonClick={this.focusUploadInputHandler}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tChoose a file\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{this.props.status === \"success\" && (\n\t\t\t\t\t\t\t<div className=\"image-uploader__share-area\">\n\t\t\t\t\t\t\t\t<div className=\"image-uploader__link\">\n\t\t\t\t\t\t\t\t\t{this.props.link}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\tonClick={this.copyLinkHandler}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCopy Link\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from \"react\";\n\nimport \"./App.css\";\nimport image from \"./images/image.png\";\n\nimport { ImageUploader } from \"./components/image-uploader/image-uploader.js\";\n\nexport class App extends React.Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tstatus: \"upload\",\n\t\t\tlink: \"\",\n\t\t};\n\n\t\tthis.uploadFileHandler = this.uploadFileHandler.bind(this);\n\t}\n\n\tuploadFileHandler(item, status) {\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({\n\t\t\t\tstatus: status,\n\t\t\t\tlink: `https://images.mydomain.com/${item[0].name\n\t\t\t\t\t.split(\" \")\n\t\t\t\t\t.join(\"-\")}`,\n\t\t\t});\n\t\t}, 3000);\n\n\t\tthis.setState({ status: \"loading\" });\n\t}\n\n\trender() {\n\t\tconst { status } = this.state;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<ImageUploader\n\t\t\t\t\tstatus={status}\n\t\t\t\t\tonChangeHandler={this.uploadFileHandler}\n\t\t\t\t\tlink={this.state.link}\n\t\t\t\t\timage={\n\t\t\t\t\t\tstatus === \"success\" && (\n\t\t\t\t\t\t\t<img src={image} alt=\"success\" />\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}